# Release Workflow Template
# Usage: Copy to .github/workflows/release.yml in each repository

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f pyproject.toml ]; then
          pip install poetry
          poetry install --with dev
        elif [ -f requirements-dev.txt ]; then
          pip install -r requirements-dev.txt
        elif [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        if [ -f pyproject.toml ]; then pip install -e .; fi

    - name: Run tests
      run: |
        pytest --cov=src --cov-report=xml --cov-fail-under=80

    - name: Test CLI commands
      run: |
        python -m engine_cli --help

  release:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Configure Poetry
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
        poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_TOKEN }}

    - name: Build package
      run: poetry build

    - name: Publish to TestPyPI (if token available)
      run: |
        if [ -n "${{ secrets.TEST_PYPI_API_TOKEN }}" ]; then
          poetry publish --repository testpypi
        else
          echo "TestPyPI token not available, skipping test publish"
        fi
      continue-on-error: true

    - name: Publish to PyPI
      run: poetry publish

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## ðŸš€ Release ${{ github.ref_name }}

          **Repository:** `${{ github.repository }}`
          **Published:** ${{ github.event.head_commit.timestamp }}
          **Commit:** [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})

          ### ðŸ“¦ Installation

          ```bash
          pip install engine-cli==${{ github.ref_name }}
          ```

          ### ðŸ”„ Changes

          This release includes various improvements and bug fixes. See the [changelog](${{ github.server_url }}/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

          ### âœ… Verification

          - âœ… All tests passed
          - âœ… Code quality checks passed
          - âœ… Security scans passed
          - âœ… Package built successfully
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: release
    if: success()

    steps:
    - name: Notify Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: 'releases'
        slack-message: "ðŸš€ New release: ${{ github.event.repository.name }} ${{ github.ref_name }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      continue-on-error: true
